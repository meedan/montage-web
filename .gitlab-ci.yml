stages:
  - build
  - test

#build_test:
#  image: docker:latest
#  services:
#    - docker:dind
#  tags:
#    - meedan
#    - meedan-labs
#  stage: build
#  script:
#    - apk add --no-cache curl jq python py-pip git
#    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#    - docker build  -f Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"  .
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#  only:
#    - feat/7600-aws-deploy

test:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: test
  script:
    - apk add --no-cache curl wget git py-pip
    - pip install docker-compose==1.23.2
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - git clone https://github.com/meedan/check-api.git
    - git clone https://github.com/meedan/pender.git
    - d=configurator/check/test/montage-web/montage-web/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - d=configurator/check/test/montage-web/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
    - d=configurator/check/test/montage-web/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
    - cp configurator/check/test/montage-web/elasticsearch.yml ./
    - cp configurator/check/test/montage-web/postgresql.conf ./
    - ls
    - ls pender/config
    - ls check/config
    - docker-compose build
    - docker-compose -f docker-compose.yml  up
    #- d=configurator/check/test/montage-web/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
    #- d=configurator/check/test/montage-web/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
  only:
    - feat/7600-aws-deploy