stages:
  - test
  - build
  - deploy


test:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: test
  script:
    - apk add --no-cache curl wget git py-pip
    - sysctl -w vm.max_map_count=262144
    - pip install docker-compose==1.23.2
    - git clone --recurse-submodules -j8 https://github.com/meedan/check.git
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    #- git clone https://github.com/meedan/check-api.git
    #- git clone https://github.com/meedan/check-web.git
    #- git clone https://github.com/meedan/pender.git
    #- git clone https://gitlab.com/meedan/alegre.git
    #- git clone https://github.com/meedan/vframe.git
    #- git clone -b feat/7600-aws-deploy https://github.com/meedan/montage-web.git
    - d=configurator/check/travis/montage-web/; for f in $(find $d -type f); do cp "$f" "montage-web/${f/$d/}"; done
    - ls montage-web/test
    - d=configurator/check/local/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
    - d=configurator/check/local/check-api/; for f in $(find $d -type f); do cp "$f" "check-api/${f/$d/}"; done
    - d=configurator/check/local/alegre/; for f in $(find $d -type f); do cp "$f" "alegre/${f/$d/}"; done
    - d=configurator/check/local/check-web/; for f in $(find $d -type f); do cp "$f" "check-web/${f/$d/}"; done
    - d=configurator/check/local/vframe/; for f in $(find $d -type f); do cp "$f" "vframe/${f/$d/}"; done
    #- cp configurator/check/test/montage-web/elasticsearch.yml ./
    #- cp configurator/check/test/montage-web/postgresql.conf ./
    - COMPOSE_HTTP_TIMEOUT=400 docker-compose -f docker-compose.yml  -f docker-test.yml up -d
    #- docker-compose -f docker-compose.yml  -f docker-test.yml exec -T montage.test bundle install --gemfile test/Gemfile
    #- docker-compose -f docker-compose.yml  -f docker-test.yml exec -T montage.test npm run test
    #- d=configurator/check/test/montage-web/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
    #- d=configurator/check/test/montage-web/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
  only:
    - feat/7600-aws-deploy

build_qa:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/qa/montage-web/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker build  -f Dockerfile -t "$QA_ECR_BASE_URL:$CI_COMMIT_SHA"  .
    - docker push "$QA_ECR_BASE_URL:$CI_COMMIT_SHA"
  only:
    - feat/7600-aws-deploy


deploy_qa:
  image: python:3-alpine
  stage: deploy
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install ecs-deploy==1.7.0
    - ecs deploy ecs-qa  qa-montage-web --image qa-montage-web-c $QA_ECR_BASE_URL:$CI_COMMIT_SHA --timeout -1
    - echo "new Image was deployed $QA_ECR_BASE_URL:$CI_COMMIT_SHA"
  only:
    - feat/7600-aws-deploy