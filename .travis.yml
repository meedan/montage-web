sudo: required
dist: trusty
language: node_js
services:
- postgresql
node_js:
- 8.11.4
cache:
  directories:
  - node_modules
  - /tmp/bundler
addons:
  postgresql: 9.4
  hosts:
    - minio
    - redis
before_install:
# extract configs
- git clone https://${TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
# apt dependencies
- sudo rm /etc/apt/sources.list.d/mongodb*
- sudo apt-get -qq update
- sudo apt-get install wget python-setuptools lsof unzip imagemagick ruby ruby-dev libnss3 libnss3-dev xvfb libnss3-1d libexif-dev curl build-essential libssl-dev libappindicator1 fonts-liberation redis-server -y
- rvm --default use 2.3.4
# environment
- export PATH=/tmp/bundler/ruby/2.3.0/bin:$PATH
- export GEM_PATH=/tmp/bundler/ruby/2.3.0/gems:$GEM_PATH
# check api
- export TEST_ENV_NUMBER=0
- psql -c 'create database checkdesk_test0;' -U postgres
- redis-server 2>&1 >/dev/null &
- wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.deb
- wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.3.1.deb.sha512
  && shasum -a 512 -c elasticsearch-6.3.1.deb.sha512 && sudo dpkg -i --force-confnew elasticsearch-6.3.1.deb && sudo service elasticsearch
  restart
- sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-icu
- sudo service elasticsearch restart
- until curl --silent -XGET --fail http://localhost:9200; do printf '.'; sleep 1; done
- curl --silent -XPUT http://localhost:9200/check_api_tests0
- sudo service elasticsearch status
- export CHECK_API_BRANCH=$((git ls-remote --exit-code --heads https://github.com/meedan/check-api.git $TRAVIS_BRANCH >/dev/null && echo $TRAVIS_BRANCH) || echo 'develop')
- echo "Using branch $CHECK_API_BRANCH for Check API"
- git clone --branch=$CHECK_API_BRANCH https://github.com/meedan/check-api.git
- d=configurator/check/travis/check-api/; for f in $(find $d -type f); do cp "$f" "check-api/${f/$d/}"; done
- cd check-api
- echo 'Updating configuration...' && sed -i 's/localhost:3333/localhost:8080/g' config/config.yml && (cat config/config.yml | grep checkdesk_client)
- bundle install --path=/tmp/bundler
- bundle exec rake db:migrate RAILS_ENV=test
- bundle exec rake lapis:api_keys:create_default RAILS_ENV=test
- bundle exec sidekiq -L log/sidekiq.log -d
- bundle exec thin -p 3000 -e test -t 60 --threadpool-size=60 --threaded start >/dev/null &
- cd -
- export RAILS_ENV=development
# pender
- docker run -d -p 9000:9000 -e "MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE" -e "MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" minio/minio server /data
- git clone https://github.com/meedan/pender.git
- d=configurator/check/travis/pender/; for f in $(find $d -type f); do cp "$f" "pender/${f/$d/}"; done
- cd pender
- bundle install --path=/tmp/bundler
- bundle exec rake db:migrate
- bundle exec rails runner 'a = ApiKey.create!; a.access_token = "test"; a.save!'
- bundle exec rails s -p 3005 >/dev/null &
- cd -
# xvfb
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
# google chrome
- sudo apt-get -qq update
- sudo apt-get install chromium-browser -y
- export CHROME_BIN=/usr/bin/chromium-browser
- chromium-browser &
# chromedriver
- wget http://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip
- unzip chromedriver_linux64.zip
- sudo mv chromedriver /usr/local/bin
- sudo chmod a+x /usr/local/bin/chromedriver
- chromedriver --port=9517 >/dev/null 2>/dev/null &
# ruby / bundler / rspec
- cd test && bundle install --path=/tmp/bundler && cd -
# config files
- d=configurator/check/travis/montage-web/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
# specific dependencies for montage
- sudo ln -s /home/travis/build/meedan/montage-web /app
- sudo apt-get -qq update
- sudo apt-get install wget git python python-pip libfontconfig -y
- sudo pip install glue
- export PATH=/usr/local/bin:$PATH
- npm -g install grunt-cli karma-cli bower jshint
- mkdir /tmp/git && git init /tmp/git
- GIT_DIR=/tmp/git bower --allow-root install
before_script:
- npm run build
- export SERVER_PORT=8080
- npm run publish &
- sleep 5
script: npm run test
after_script:
- echo 'Tests finished!'
notifications:
  slack:
    secure: R94TkWCuIUfe6aogvRm5xy8BezccsIqeOEe35EiIb8DYx+bspCMUiETPd7oHtXC5L+2HGtXMJ0DDESqbLcfZHJxWob7sLu/dQGId8T9d6S0Vl7xQE3nsMTuXPi5c5/Y7W9GWnxRNXKb1qUd0JqhtqFq9Ot0TG4YsT0pFrKH17xDnY9GN4Y0YC3PfYFS16FzUWznXOffCX8dBc0e+4TlmbQCDNwAhuH5Lz55FiWbzUf6yv1FgVG/0SZJNXRxwNLsbD9w/xJ6wuGuQmDeYkwnvK+uldPfnQyzbQ0IwMxPf7AwAAQEQ504Q/1oyZ1LTPyCg/+RK8k+C8nlZJW0BQ3PJqhglrd82jdiHdRxg2MLltz4xznvwJZTvcUJUA3/fISOnt/priPNtCT+pnUzEdsodu1aCTTthdV5i0nvqbXbNaobOMFw06L164PJuDrr4dIuaXXP1RM+mpKiaxMfY9pKpo0RTSszuW0u7Xm/plPGcZ5xvSQTouYnUNdshEz1E/POZLfOEm6vJ5qNELFZQwhrVzP0oP1v2tRFUubmAb2jEIqu6pbs0Jn0CWhTtdJIrFQt59nBY5m/5RsRwThHxUCy1jXtLIW5DJoTaOXXfHr+/rypkoC+RXd2sxigv9R/z+LOyYT6QOdNXWK8DweA0KhKzOVdxhGxLbvdHGfXcl0MxTLU=
