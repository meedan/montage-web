version: "2.1"
volumes:
  esdata:
  pgdata:
  redis:
  minio:
networks:
  dev:
services:
  elasticsearch:
    image: meedan/elasticsearch:6.3
    environment:
      - "cluster.name=docker-cluster"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Dlog4j2.disable.jmx=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - "./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "esdata:/usr/share/elasticsearch/data"
    networks:
      - dev
  postgres:
    image: postgres:9.6
    command: postgres -c config_file=/etc/postgresql.conf
    ports:
      - "5432:5432"
    volumes:
      - "./postgresql.conf:/etc/postgresql.conf"
      - "pgdata:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - dev
  redis:
    image: redis:5
    ports:
      - "6379:6379"
    volumes:
      - "redis:/data"
    networks:
      - dev
  minio:
    image: minio/minio
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - "minio:/data"
    networks:
      - dev
  api:
    build: check-api
    ports:
      - "3000:3000"
      - "3300:3300"
    depends_on:
      - elasticsearch
      - postgres
      - redis
      - pender
    volumes:
      - "./check-api:/app"
    environment:
      RAILS_ENV: development
      SERVER_PORT: 3000
    networks:
      - dev
  pender:
    build: pender
    shm_size: 1G
    ports:
      - "3200:3200"
      - "9555:9555"
    volumes:
      - "./pender:/app"
    depends_on:
      - redis
    environment:
      RAILS_ENV: development
      SERVER_PORT: 3200
    networks:
      - dev
  web:
    build: check-web
    ports:
      - "3333:3333"
    depends_on:
      - api
    volumes:
      - "./check-web:/app"
      - "./check-api:/api"
      - "/app/node_modules"
    environment:
      PLATFORM: web
      NODE_ENV: development
      SERVER_PORT: 3333
      MODE: development
    networks:
      - dev
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - dev
  alegre:
    build: alegre
    ports:
      - "3100:3100"
    volumes:
      - "./alegre:/app"
    depends_on:
      - kibana
      - redis
    environment:
      BOILERPLATE_ENV: dev
      ALEGRE_PORT: 3100
      REDIS_DATABASE: 2
    networks:
      - dev
  vframe:
    build: vframe
    volumes:
      - "./vframe:/root/vframe"
    env_file:
      - vframe/.env_file
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    networks:
      - dev
  montage:
    build: montage-web
    volumes:
      - "./montage-web:/app"
      - "/app/node_modules"
      - "/app/src/libs"
      - "/app/build"
    ports:
      - "8080:8080"
    links:
      - api
    environment:
      NODE_ENV: development
      SERVER_PORT: 8080
    networks:
      - dev
